/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime

case class Settlement (
  /* Uniquely identifies this Transaction within Vyze's settlement system.    This is a  monotonically increasing, positive number.  During settlement reconcilliation, the `settlement_id` on every `SettledTransaction` MUST exist with the Vyze SFH system.  If it does not, the entire settlement session will be failed.    */
  settlementId: Int,
  /* The amount, as an absolute value, the lender has agreed to settle for any one Transaction.    This is the original transaction amount, less any discounts, fees, etc. that the lender wishes to apply.  Ideally, it should be     ```     settled_amount = amount - discount_amount - misc_fee_amount     ```      Not following the prescribed formula can (and most likely will) cause confusion on the part of the merchant if they decide to make an attempt reconcile accounts based information reported by Vyze.      */
  settledAmount: Double,
  /* Timestamp, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, of when the lender settled this Trasnaction.  */
  settledDate: DateTime,
  /* Timestamp, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, indicating when the lender intends to transfer money into the merchant's account.  */
  wireDate: Option[DateTime],
  /* The identifier for any promotion the lender has applied to this transaction e.g. 6 months same as cash, better APR, etc.    This promo may also be altered by the prescence of specific `ticket_terms` found on the original transaction.  As stated before, these types of `ticket_term`/`promo_code` relationships are between the merchant and the lender.  If there is no special promotion to be applied to this Settlement, the lender must set this value to \"DEFAULT\".  */
  promoId: String,
  /* Discount/MDR rate (a positive, real number between 0-100) the the lender is applying to this Transaction.  This is currently only used for reporting purposes and never in any sort of calculation.  */
  discountRate: Double,
  /* Discount/MDR amount the the lender is applying to this Transaction.  This amount should be refelcted as debit against the `amount` of the Trasnaction and should be relfected appropriately in the `settled_amount`.  This value MUST be an absolute a value.  */
  discountAmount: Double,
  /* Misc. fees rate (a positive, real number between 0-100) the the lender is apllying to this Transaction.  This is currently only used for reporting purposes and never in any sort of calculation.  */
  miscFeeRate: Option[Double],
  /* Misc. fee the the lender is applying to this Settlement.  This amount should be refelcted as debit against the `amount` of the Trasnaction and should be relfected appropriately in the `settled_amount`.  This value MUST be an absolute a value.  */
  miscFeeAmount: Option[Double]
) extends ApiModel


