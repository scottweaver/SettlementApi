{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "Vyze JSON Settlement API"
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/scottweaver/VyzeSettlement/1.0",
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/settlement/api" : {
      "get" : {
        "description" : "All cleared, unsettled records.  This is what a lender will recevie from Vyze.\n",
        "produces" : [ "application/json", "text/xml" ],
        "responses" : {
          "200" : {
            "description" : "Get all transactions that are ready to be settled.",
            "schema" : {
              "$ref" : "#/definitions/SettlementRequest"
            }
          }
        }
      },
      "post" : {
        "description" : "Reconcile requested settlements.\n",
        "responses" : {
          "200" : {
            "description" : "Reconcile requested settlements",
            "schema" : {
              "$ref" : "#/definitions/SettlementResponse"
            }
          }
        }
      }
    },
    "/settlement/lender/spi" : {
      "get" : {
        "description" : "Get the settlement reconciliation information.  This could be by date, merchant, etc.\n",
        "responses" : {
          "200" : {
            "description" : "Get all transactions that are settled.",
            "schema" : {
              "$ref" : "#/definitions/SettlementResponse"
            }
          }
        }
      },
      "post" : {
        "description" : "Request settlement of transactions.\n",
        "responses" : {
          "200" : {
            "description" : "Request settlement of transactions.",
            "schema" : {
              "$ref" : "#/definitions/SettlementRequest"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "SessionMetadata" : {
      "description" : "Metadata for both clearing and settlement reconciliation.\n",
      "type" : "object",
      "properties" : {
        "message_format" : {
          "description" : "Indicates the type of message this.  Can be either `settlement` and `reconciliation`.",
          "type" : "string",
          "enum" : [ "settlement", "reconciliation" ]
        },
        "version" : {
          "description" : "API version.  Current version is 1.0.",
          "default" : "1.0",
          "type" : "string"
        },
        "timestamp" : {
          "description" : "Timestamp, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, when this message was created and sent to the receiving party.",
          "type" : "string",
          "format" : "date-time"
        }
      },
      "required" : [ "version", "timestamp", "message_format" ]
    },
    "SettlementRequest" : {
      "description" : "Parent object that holds Transactions ready for settlement.",
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SessionMetadata"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          },
          "xml" : {
            "wrapped" : true
          }
        }
      },
      "required" : [ "metadata" ]
    },
    "Transaction" : {
      "description" : "Represents an individual \"Transaction\" that a merchant has submitted to be settled by the lender.\n\nThere is no cosntraints as to what constitutes a \"Transaction.\" A Transaction could represent the roll up of a customer's entire purchase or it could be an individual line item that is part of a larger purchase.  In this way, the Vyze Settlement Facilitation Hub (SFH) applies few constraints as to what a Tranasaction means.\n",
      "type" : "object",
      "properties" : {
        "settlement_id" : {
          "description" : "Uniquely identifies this Transaction within Vyze's settlement system.  \n\nThis is a  monotonically increasing, positive number.\n",
          "type" : "integer",
          "minimum" : 1
        },
        "transaction_date" : {
          "description" : "Timestamp, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, that indicates when the Transaction was placed.  \n\nFor certain, legacy implementations, the time portition of this value MAY NOT represent the actual time of the Transaction.\n",
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "description" : "The type of Transaction, either a `sale` or a `return`.\n\n| **Type** | **Description** |\n| -------- | --------------- |\n| `sale`   | MUST credit the merchant's account and debit the customer's account. |\n| `return` | MUST debit the merchant's account and credit the customer's account. |\n",
          "type" : "string",
          "enum" : [ "sale", "return" ]
        },
        "merchant_id" : {
          "description" : "Uniquely idenitfies the merchant of this Transaction within all Vyze's systems.",
          "type" : "string"
        },
        "merchant_account_id" : {
          "description" : "This field contains a lender-assigned account identifier.\n",
          "type" : "string"
        },
        "transaction_site_id" : {
          "description" : "The store, location number, or name that uniquely identifies where the transaction took place.\n",
          "type" : "string"
        },
        "merchant_transaction_id" : {
          "description" : "Identidier, generated by the merchant, that should be able to deterministically identify this individual Transaction.",
          "type" : "string"
        },
        "original_merchant_transaction_id" : {
          "description" : "Identidier that is a reference to some other Transaction's `merchant_transaction_id`.  The common use case for this is to associate a `return` with the original `sale`.",
          "type" : "string"
        },
        "customer_account_number" : {
          "description" : "The customer's account number that was used durning the tendering of this transaction.\n\nThe `customer_account_number` comes from the merchant, via a clearing request, and not from within of Vyze's SFH system.\n",
          "type" : "string"
        },
        "authorization_id" : {
          "description" : "Authorization identifier or number provided, generally by the lender,  at the time the Transaction is authorized.\n",
          "type" : "string"
        },
        "amount" : {
          "description" : "Absolute value representing the total amount for this transaction.\n",
          "type" : "number",
          "format" : "double",
          "minimum" : 0
        },
        "ticket_terms" : {
          "description" : "Ticket terms is a value that the merchant applies to a transaction which MAY only have meaning to the merchant e.g. use of a gift card, etc.\n\nTicket terms might also represent a special promotion that is agreed upon by both the merchant AND the lender.  In this case, the lender MUST return the appropriate corresponding `promo_d` in the settlement reconcilliation response.\n\nA value of **9999** indicates the *default* tickets terms where supplied by the merchant, which generally means lender is free to apply whatever discounts, promos they deem appropriate per agreements with the merchant.\n",
          "type" : "string",
          "default" : "9999"
        },
        "lender_merchant_id" : {
          "description" : "Optional identifier, defined by the lender that identifies a merchant.  If a lender wants to use `lender_merchant_id` every merchant matched with that lender MUST provide this in their RCC (clearing file).",
          "type" : "string"
        },
        "device_id" : {
          "description" : "Identifier of the device source of this Transaction e.g. a terminal/pos id, mobile app uuid, etc.\n",
          "type" : "string"
        },
        "account_expiration" : {
          "description" : "Expiration, if any, of the customer's account.  The account_expiration comes from the merchant, via a clearing request and not from within of Vyze's SFH system.",
          "type" : "string",
          "format" : "date"
        }
      },
      "required" : [ "settlement_id", "merchant_id", "customer_account_number", "amount", "transaction_date", "type" ]
    },
    "SettlementResponse" : {
      "description" : "Parent object for settlement reconciliation.",
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SessionMetadata"
        },
        "settlements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Settlement"
          }
        },
        "exceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SettlementException"
          }
        },
        "adjustments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Adjustment"
          }
        }
      },
      "required" : [ "metadata" ]
    },
    "Settlement" : {
      "description" : "A Transaction that has been successfuly settled by the lender\n\nSettlements are expected to be complete i.e. a lender MUST never partially settle a Tranasaction.  There MUST never be more than on Settlement per Transaction and there MUST be a Transaction in Vyze's SFh system whose `settlement_id` matches this `Settlements` `settlement_id`.\n",
      "type" : "object",
      "properties" : {
        "settlement_id" : {
          "description" : "Uniquely identifies this Transaction within Vyze's settlement system.  \n\nThis is a  monotonically increasing, positive number.\n\nDuring settlement reconcilliation, the `settlement_id` on every `SettledTransaction` MUST exist with the Vyze SFH system.  If it does not, the entire settlement session will be failed.  \n",
          "type" : "integer"
        },
        "settled_amount" : {
          "description" : "The amount, as an absolute value, the lender has agreed to settle for any one Transaction.  \n\nThis is the original transaction amount, less any discounts, fees, etc. that the lender wishes to apply.  Ideally, it should be\n    ```\n    settled_amount = amount - discount_amount - misc_fee_amount\n    ```\n    \nNot following the prescribed formula can (and most likely will) cause confusion on the part of the merchant if they decide to make an attempt reconcile accounts based information reported by Vyze.    \n",
          "type" : "number",
          "format" : "double",
          "minimum" : 0
        },
        "settled_date" : {
          "description" : "Timestamp, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, of when the lender settled this Trasnaction.\n",
          "type" : "string",
          "format" : "date-time"
        },
        "wire_date" : {
          "description" : "Timestamp, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, indicating when the lender intends to transfer money into the merchant's account.\n",
          "type" : "string",
          "format" : "date-time"
        },
        "promo_id" : {
          "description" : "The identifier for any promotion the lender has applied to this transaction e.g. 6 months same as cash, better APR, etc.  \n\nThis promo may also be altered by the prescence of specific `ticket_terms` found on the original transaction.  As stated before, these types of `ticket_term`/`promo_code` relationships are between the merchant and the lender.\n\nIf there is no special promotion to be applied to this Settlement, the lender must set this value to \"DEFAULT\".\n",
          "type" : "string",
          "default" : "DEFAULT"
        },
        "discount_rate" : {
          "description" : "Discount/MDR rate (a positive, real number between 0-100) the the lender is applying to this Transaction.  This is currently only used for reporting purposes and never in any sort of calculation.\n",
          "type" : "number",
          "format" : "double",
          "minimum" : 0
        },
        "discount_amount" : {
          "description" : "Discount/MDR amount the the lender is applying to this Transaction.  This amount should be refelcted as debit against the `amount` of the Trasnaction and should be relfected appropriately in the `settled_amount`.  This value MUST be an absolute a value.\n",
          "type" : "number",
          "format" : "double",
          "minimum" : 0
        },
        "misc_fee_rate" : {
          "description" : "Misc. fees rate (a positive, real number between 0-100) the the lender is apllying to this Transaction.  This is currently only used for reporting purposes and never in any sort of calculation.\n",
          "type" : "number",
          "format" : "double",
          "minimum" : 0
        },
        "misc_fee_amount" : {
          "description" : "Misc. fee the the lender is applying to this Settlement.  This amount should be refelcted as debit against the `amount` of the Trasnaction and should be relfected appropriately in the `settled_amount`.  This value MUST be an absolute a value.\n",
          "type" : "number",
          "format" : "double",
          "minimum" : 0
        }
      },
      "required" : [ "settlement_id", "settled_amount", "promo_id", "discount_rate", "discount_amount", "settled_date" ]
    },
    "SettlementException" : {
      "description" : "This indactes that a Trasnaction that was submitted by the merchant failed to be settled by the lender.  A settlement exception could be triggered by any number of issues and it is up to the lender to provide a reasonable description (along with lender-defined code) of why the lender has decided to not fund this trasnaction.\n\nException are expected to be complete i.e. a lender MUST never partially fail a Tranasaction.\n",
      "type" : "object",
      "properties" : {
        "settlement_id" : {
          "description" : "Uniquely identifies this Transaction within Vyze's settlement system (SFH).  \n\nThis is a  monotonically increasing, positive number.\n\nDuring settlement reconcilliation, the `settlement_id` on every `SettlementException` MUST exist with the Vyze SFH system.  If it does not, the entire settlement session will be failed.\n",
          "type" : "string"
        },
        "exception_date" : {
          "description" : "Timestamp, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, of when the lender failed to fund this Trasnaction.\n",
          "type" : "string",
          "format" : "date-time"
        },
        "reason_code" : {
          "description" : "Lender-defined code that categorizes the reason for this exception.\n",
          "type" : "string"
        },
        "reason_description" : {
          "description" : "A concise explanation of why this Settlement failed.\n",
          "type" : "string"
        }
      },
      "required" : [ "settlement_id", "exception_date", "reason_code", "reason_description" ]
    },
    "Adjustment" : {
      "description" : "A lender-initated transfer of money into (credit) or out of (debit) a merchants account. A good (and the most common) example of an Adjsutment is a customer initaited charge back.\n",
      "type" : "object",
      "properties" : {
        "adjustment_type" : {
          "description" : "The type of adjustment represented by this Adjustment.\n\n| **Type**              | **Description** |\n| --------------------- | --------------------------------------------------------- |\n| chargeback            | Chargeback (debits merchant's account, credits the customer's account). |\n| chargeback-reversal   | Reverses a previous chargeback (credits merchant's account, debits the customer's account).|\n| misc-credit           | Credit's the merchant's account. |\n| misc-debit            | Debits's the merchant's account. |\n| float                 | Weird thing no one uses          |\n",
          "type" : "string",
          "enum" : [ "chargeback", "chargeback-reversal", "misc-credit", "misc-debit", "float" ]
        },
        "adjustment_date" : {
          "description" : "Date and time, in [RFC-3339](https://tools.ietf.org/html/rfc3339) timestamp format, when this adjustment was applied to the merchant's account.\n",
          "type" : "string",
          "format" : "date-time"
        },
        "adjustment_amount" : {
          "description" : "Absolute value of the amount of this adjustment. This should reflect the amount that was submitted on the clearing file. This value should NOT reflect any applied fees or discounts.\n",
          "type" : "number",
          "format" : "double",
          "minimum" : 0
        },
        "settlement_id" : {
          "description" : "Uniquely identifies this Transaction within Vyze's settlement system.\n\nWhile the `settlement_id` is optional for adjustments.  It is HIGHLY recommended the lender include it if at all possible as it helpful for reporting and audit purposes.\n",
          "type" : "string"
        },
        "customer_account_number" : {
          "description" : "Customer Account Number that is being credited or debited for the transaction. Some adjustments might not directly impact a customer account, hence this field is optional for adjustments.\n",
          "type" : "string"
        },
        "adjustment_code" : {
          "description" : "Lender-defined code that categorizes the reason for this adjustment.\n",
          "type" : "string"
        },
        "adjustment_description" : {
          "description" : "A concise explanation of this adjustment.\n",
          "type" : "string"
        }
      },
      "required" : [ "adjustment_type", "adjustment_date", "adjustment_amount", "adjustment_description" ]
    }
  }
}